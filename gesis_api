import requests
import os
import json
from getpass import getpass
import urllib.parse

# Set hardcoded credentials
USERNAME = "ds4politics@posteo.de"
PASSWORD = "9GZGgKsjpRc9fH"

def search_studies(keyword, limit=10):
    """Search for studies by keyword using the GESIS API"""
    print(f"Searching for studies with keyword '{keyword}'...")
    
    # URL encode the keyword for the search query
    encoded_keyword = urllib.parse.quote(keyword)
    # Use correct GESIS endpoint that works
    search_url = f"https://search.gesis.org/api/search?subtype=study&q={encoded_keyword}&size={limit}"
    
    try:
        response = requests.get(search_url)
        if response.status_code == 200:
            data = response.json()
            items = data.get("data", [])
            if items:
                print(f"Found {len(items)} studies matching '{keyword}'.")
                return items
            else:
                print(f"No studies found for keyword '{keyword}'.")
                return []
        else:
            print(f"Search failed. Status code: {response.status_code}")
            print("Response content:", response.content)
            return []
    except requests.exceptions.ConnectionError:
        print(f"Connection error while accessing {search_url}")
        print("Please check your internet connection or the API endpoint.")
        return []

def get_study_details(study_id):
    """Get detailed information about a specific study"""
    detail_url = f"https://api.gesis.org/search/studies/{study_id}"
    response = requests.get(detail_url)
    
    if response.status_code == 200:
        return response.json()
    else:
        print(f"Failed to retrieve details for study {study_id}. Status code: {response.status_code}")
        return None

def authenticate_dbk():
    """Set up authentication for the GESIS DBK portal"""
    print("\nUsing pre-configured credentials for GESIS.")
    
    # Create a session to maintain cookies
    session = requests.Session()
    
    # Actual GESIS login URL (may need adjustment based on current GESIS site structure)
    login_url = "https://dbk.gesis.org/dbksearch/login.asp"
    login_data = {
        "username": USERNAME,  
        "password": PASSWORD   
    }
    
    try:
        response = session.post(login_url, data=login_data)
        
        if response.status_code == 200:
            print("Login attempt completed.")
            return session
        else:
            print(f"Login failed. Status code: {response.status_code}")
            return None
    except requests.exceptions.ConnectionError:
        print(f"Connection error while accessing {login_url}")
        print("Please check your internet connection.")
        return None

def download_study_data(study_id, session=None):
    """
    Attempt to download data files for a study
    Note: This often requires manual steps due to terms of use agreements
    """
    print(f"\nAttempting to access data for study {study_id}...")
    
    # First, get study details to find download links
    study = get_study_details(study_id)
    if not study:
        return False
    
    # Check if there are any downloadable files
    # Note: The actual structure depends on the GESIS API response format
    files = study.get("files", [])
    if not files:
        print("No downloadable files found in the metadata.")
        print("You may need to visit the GESIS DBK portal manually:")
        print(f"https://dbk.gesis.org/dbksearch/sdesc2.asp?no={study_id}&db=e")
        return False
    
    # Attempt to download the first available file
    file_url = files[0].get("downloadUrl")
    filename = files[0].get("name", f"study_{study_id}_data.zip")
    
    if not file_url:
        print("No download URL available.")
        return False
        
    print(f"Attempting to download {filename}...")
    
    # Use the authenticated session if available, or create a new request
    if session:
        r = session.get(file_url)
    else:
        r = requests.get(file_url)
    
    if r.status_code == 200:
        os.makedirs("data", exist_ok=True)
        with open(f"data/{filename}", "wb") as f:
            f.write(r.content)
        print(f"Successfully downloaded {filename} to 'data/' folder.")
        return True
    else:
        print(f"Download failed. Status code: {r.status_code}")
        print("This may be due to access restrictions or required terms of use acceptance.")
        print(f"Try downloading manually at https://dbk.gesis.org/dbksearch/sdesc2.asp?no={study_id}&db=e")
        return False

def main():
    print("GESIS Study Search and Download Tool")
    print("====================================")
    
    # Authentication using hardcoded credentials
    session = authenticate_dbk()
    
    # Search for studies
    keyword = input("\nEnter a keyword to search for studies: ")
    limit = input("Maximum number of results (default 10): ")
    limit = int(limit) if limit.isdigit() else 10
    
    studies = search_studies(keyword, limit)
    
    if studies:
        # Display results with IDs for selection
        print("\nSearch Results:")
        for i, study in enumerate(studies):
            title = study.get('title', {}).get('en', study.get('title', {}).get('de', 'Unknown title'))
            study_id = study.get('id', 'Unknown')
            print(f"{i+1}. [{study_id}] {title}")
        
        # Ask user which study to download
        selection = input("\nEnter the number of the study to download (or 'q' to quit): ")
        if selection.lower() != 'q' and selection.isdigit():
            idx = int(selection) - 1
            if 0 <= idx < len(studies):
                study_id = studies[idx].get('id')
                download_study_data(study_id, session)
            else:
                print("Invalid selection.")
    
    print("\nScript finished.")

if __name__ == "__main__":
    main()
